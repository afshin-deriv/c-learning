// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: proto/v1/clearning.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId int32 `protobuf:"varint,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
}

func (x *LessonRequest) Reset() {
	*x = LessonRequest{}
	mi := &file_proto_v1_clearning_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonRequest) ProtoMessage() {}

func (x *LessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_clearning_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonRequest.ProtoReflect.Descriptor instead.
func (*LessonRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_clearning_proto_rawDescGZIP(), []int{0}
}

func (x *LessonRequest) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

type LessonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId           int32       `protobuf:"varint,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Title              string      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description        string      `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ExampleCode        string      `protobuf:"bytes,4,opt,name=example_code,json=exampleCode,proto3" json:"example_code,omitempty"`
	LearningObjectives []string    `protobuf:"bytes,5,rep,name=learning_objectives,json=learningObjectives,proto3" json:"learning_objectives,omitempty"`
	TestCases          []*TestCase `protobuf:"bytes,6,rep,name=test_cases,json=testCases,proto3" json:"test_cases,omitempty"`
}

func (x *LessonResponse) Reset() {
	*x = LessonResponse{}
	mi := &file_proto_v1_clearning_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LessonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LessonResponse) ProtoMessage() {}

func (x *LessonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_clearning_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LessonResponse.ProtoReflect.Descriptor instead.
func (*LessonResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_clearning_proto_rawDescGZIP(), []int{1}
}

func (x *LessonResponse) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *LessonResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LessonResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LessonResponse) GetExampleCode() string {
	if x != nil {
		return x.ExampleCode
	}
	return ""
}

func (x *LessonResponse) GetLearningObjectives() []string {
	if x != nil {
		return x.LearningObjectives
	}
	return nil
}

func (x *LessonResponse) GetTestCases() []*TestCase {
	if x != nil {
		return x.TestCases
	}
	return nil
}

type TestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input          string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	ExpectedOutput string `protobuf:"bytes,2,opt,name=expected_output,json=expectedOutput,proto3" json:"expected_output,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TestCase) Reset() {
	*x = TestCase{}
	mi := &file_proto_v1_clearning_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCase) ProtoMessage() {}

func (x *TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_clearning_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCase.ProtoReflect.Descriptor instead.
func (*TestCase) Descriptor() ([]byte, []int) {
	return file_proto_v1_clearning_proto_rawDescGZIP(), []int{2}
}

func (x *TestCase) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TestCase) GetExpectedOutput() string {
	if x != nil {
		return x.ExpectedOutput
	}
	return ""
}

func (x *TestCase) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CodeSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId int32  `protobuf:"varint,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CodeSubmission) Reset() {
	*x = CodeSubmission{}
	mi := &file_proto_v1_clearning_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeSubmission) ProtoMessage() {}

func (x *CodeSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_clearning_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeSubmission.ProtoReflect.Descriptor instead.
func (*CodeSubmission) Descriptor() ([]byte, []int) {
	return file_proto_v1_clearning_proto_rawDescGZIP(), []int{3}
}

func (x *CodeSubmission) GetLessonId() int32 {
	if x != nil {
		return x.LessonId
	}
	return 0
}

func (x *CodeSubmission) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid     bool          `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	TestResults []*TestResult `protobuf:"bytes,2,rep,name=test_results,json=testResults,proto3" json:"test_results,omitempty"`
	Feedback    string        `protobuf:"bytes,3,opt,name=feedback,proto3" json:"feedback,omitempty"`
	CanProceed  bool          `protobuf:"varint,4,opt,name=can_proceed,json=canProceed,proto3" json:"can_proceed,omitempty"`
}

func (x *ValidationResponse) Reset() {
	*x = ValidationResponse{}
	mi := &file_proto_v1_clearning_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResponse) ProtoMessage() {}

func (x *ValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_clearning_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResponse.ProtoReflect.Descriptor instead.
func (*ValidationResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_clearning_proto_rawDescGZIP(), []int{4}
}

func (x *ValidationResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidationResponse) GetTestResults() []*TestResult {
	if x != nil {
		return x.TestResults
	}
	return nil
}

func (x *ValidationResponse) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *ValidationResponse) GetCanProceed() bool {
	if x != nil {
		return x.CanProceed
	}
	return false
}

type TestResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passed              bool   `protobuf:"varint,1,opt,name=passed,proto3" json:"passed,omitempty"`
	TestCaseDescription string `protobuf:"bytes,2,opt,name=test_case_description,json=testCaseDescription,proto3" json:"test_case_description,omitempty"`
	ActualOutput        string `protobuf:"bytes,3,opt,name=actual_output,json=actualOutput,proto3" json:"actual_output,omitempty"`
	ExpectedOutput      string `protobuf:"bytes,4,opt,name=expected_output,json=expectedOutput,proto3" json:"expected_output,omitempty"`
}

func (x *TestResult) Reset() {
	*x = TestResult{}
	mi := &file_proto_v1_clearning_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResult) ProtoMessage() {}

func (x *TestResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_clearning_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResult.ProtoReflect.Descriptor instead.
func (*TestResult) Descriptor() ([]byte, []int) {
	return file_proto_v1_clearning_proto_rawDescGZIP(), []int{5}
}

func (x *TestResult) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *TestResult) GetTestCaseDescription() string {
	if x != nil {
		return x.TestCaseDescription
	}
	return ""
}

func (x *TestResult) GetActualOutput() string {
	if x != nil {
		return x.ActualOutput
	}
	return ""
}

func (x *TestResult) GetExpectedOutput() string {
	if x != nil {
		return x.ExpectedOutput
	}
	return ""
}

type ProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ProgressRequest) Reset() {
	*x = ProgressRequest{}
	mi := &file_proto_v1_clearning_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressRequest) ProtoMessage() {}

func (x *ProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_clearning_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressRequest.ProtoReflect.Descriptor instead.
func (*ProgressRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_clearning_proto_rawDescGZIP(), []int{6}
}

func (x *ProgressRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentLesson        int32   `protobuf:"varint,1,opt,name=current_lesson,json=currentLesson,proto3" json:"current_lesson,omitempty"`
	CompletedLessons     []int32 `protobuf:"varint,2,rep,packed,name=completed_lessons,json=completedLessons,proto3" json:"completed_lessons,omitempty"`
	CompletionPercentage float32 `protobuf:"fixed32,3,opt,name=completion_percentage,json=completionPercentage,proto3" json:"completion_percentage,omitempty"`
}

func (x *ProgressResponse) Reset() {
	*x = ProgressResponse{}
	mi := &file_proto_v1_clearning_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressResponse) ProtoMessage() {}

func (x *ProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_clearning_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressResponse.ProtoReflect.Descriptor instead.
func (*ProgressResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_clearning_proto_rawDescGZIP(), []int{7}
}

func (x *ProgressResponse) GetCurrentLesson() int32 {
	if x != nil {
		return x.CurrentLesson
	}
	return 0
}

func (x *ProgressResponse) GetCompletedLessons() []int32 {
	if x != nil {
		return x.CompletedLessons
	}
	return nil
}

func (x *ProgressResponse) GetCompletionPercentage() float32 {
	if x != nil {
		return x.CompletionPercentage
	}
	return 0
}

var File_proto_v1_clearning_proto protoreflect.FileDescriptor

var file_proto_v1_clearning_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x2c, 0x0a, 0x0d, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x0e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f,
	0x0a, 0x13, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12,
	0x32, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x73, 0x22, 0x6b, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x41, 0x0a, 0x0e, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x63, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x65, 0x64, 0x22, 0xa6, 0x01, 0x0a,
	0x0a, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x61, 0x73,
	0x73, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x74, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x2a, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x9b, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x32,
	0xeb, 0x01, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x12, 0x18, 0x2e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0x1d, 0x2e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x5a,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x66, 0x73, 0x68,
	0x69, 0x6e, 0x2d, 0x64, 0x65, 0x72, 0x69, 0x76, 0x2f, 0x63, 0x2d, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_v1_clearning_proto_rawDescOnce sync.Once
	file_proto_v1_clearning_proto_rawDescData = file_proto_v1_clearning_proto_rawDesc
)

func file_proto_v1_clearning_proto_rawDescGZIP() []byte {
	file_proto_v1_clearning_proto_rawDescOnce.Do(func() {
		file_proto_v1_clearning_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_clearning_proto_rawDescData)
	})
	return file_proto_v1_clearning_proto_rawDescData
}

var file_proto_v1_clearning_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_v1_clearning_proto_goTypes = []any{
	(*LessonRequest)(nil),      // 0: clearning.LessonRequest
	(*LessonResponse)(nil),     // 1: clearning.LessonResponse
	(*TestCase)(nil),           // 2: clearning.TestCase
	(*CodeSubmission)(nil),     // 3: clearning.CodeSubmission
	(*ValidationResponse)(nil), // 4: clearning.ValidationResponse
	(*TestResult)(nil),         // 5: clearning.TestResult
	(*ProgressRequest)(nil),    // 6: clearning.ProgressRequest
	(*ProgressResponse)(nil),   // 7: clearning.ProgressResponse
}
var file_proto_v1_clearning_proto_depIdxs = []int32{
	2, // 0: clearning.LessonResponse.test_cases:type_name -> clearning.TestCase
	5, // 1: clearning.ValidationResponse.test_results:type_name -> clearning.TestResult
	0, // 2: clearning.LearningService.GetLesson:input_type -> clearning.LessonRequest
	3, // 3: clearning.LearningService.ValidateCode:input_type -> clearning.CodeSubmission
	6, // 4: clearning.LearningService.GetProgress:input_type -> clearning.ProgressRequest
	1, // 5: clearning.LearningService.GetLesson:output_type -> clearning.LessonResponse
	4, // 6: clearning.LearningService.ValidateCode:output_type -> clearning.ValidationResponse
	7, // 7: clearning.LearningService.GetProgress:output_type -> clearning.ProgressResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_v1_clearning_proto_init() }
func file_proto_v1_clearning_proto_init() {
	if File_proto_v1_clearning_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_clearning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_clearning_proto_goTypes,
		DependencyIndexes: file_proto_v1_clearning_proto_depIdxs,
		MessageInfos:      file_proto_v1_clearning_proto_msgTypes,
	}.Build()
	File_proto_v1_clearning_proto = out.File
	file_proto_v1_clearning_proto_rawDesc = nil
	file_proto_v1_clearning_proto_goTypes = nil
	file_proto_v1_clearning_proto_depIdxs = nil
}
